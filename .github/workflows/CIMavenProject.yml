
name: CI Maven Project

on:
  workflow_dispatch:

jobs:
  build:
    name: Build Project
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4.2.2

      - name: Set Up Java 17 (Oracle)
        uses: actions/setup-java@v4.7.1
        with:
          java-version: '17'
          distribution: 'oracle'

      - name: Cache Maven Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Build with Maven
        run: mvn clean install

      - name: Print Java and Maven Versions
        run: |
          java -version
          mvn -version
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4.2.2

      - name: Set Up Java 17 (Oracle)
        uses: actions/setup-java@v4.7.1
        with:
          java-version: '17'
          distribution: 'oracle'

      - name: Run Tests
        run: mvn test

  package:
    name: Package Application
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4.2.2

      - name: Set Up Java 17 (Oracle)
        uses: actions/setup-java@v4.7.1
        with:
          java-version: '17'
          distribution: 'oracle'

      - name: Package with Maven
        run: |
            mvn package
            mvn verify
      - name: Create Staging Directory and Copy JAR
        run: |
          mkdir -p staging
          shopt -s nullglob
          files=(target/*.jar)
          if [ ${#files[@]} -gt 0 ]; then
            cp "${files[@]}" staging/
          else
            echo "No JAR files found in target/"
          fi
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4.6.2
        with:
          name: Package
          path: staging

 

  deploy:
    name: Deploy Application
    runs-on: ubuntu-latest
    needs: package
    steps:
      - name: Deployment Step
        run: echo "Deploying application..." need to add github context var and evn sericite accordingly 
